<?php

/**
 * @file
 * Module file for mypager.
 */

use Drupal\Core\Url;
use Drupal\Core\Template\Attribute;
use Drupal\mypager\Plugin\views\pager\Mypager;
use Drupal\Core\Render\Markup;


/**
 * Implements hook_preprocess_mypager_pager().
 */
function template_preprocess_mypager_pager(&$variables) {
  global $pager_page_array, $pager_total, $pager_total_items, $pager_limits;
  $element = $variables['element'];
  $parameters = $variables['parameters'];
  if ($pager_page_array[$element] < ($pager_total[$element] - 1)) {
    $options = array(
      'query' => pager_query_add_page($parameters, $element, $pager_page_array[$element] + 1),
    );
    $variables['items']['next']['href'] = Url::fromRoute('<current>', [], $options);
  }
  $variables['#cache']['contexts'][] = 'url.query_args';
  $variables['attributes'] = new Attribute([
    'class' => ['js-pager__items', 'pager'],
  ]);
  $count_new_load = $pager_limits[$element] - ($pager_total[$element] * $pager_limits[$element] - $pager_total_items[$element]);
  if (empty($count_new_load)) {
    $count_new_load = $pager_limits[$element];
  }
  if ($pager_page_array[$element] < ($pager_total[$element] - 2)) {
    $count_new_load = $pager_limits[$element];
  }
  $button_text = str_replace('@count', ' <span>' . $count_new_load . '</span>', $variables['options']['mypager']['button_text']);
  $variables['options']['mypager']['button_text'] = Markup::create($button_text);
}


/**
 * Implements hook_preprocess_pager().
 */
function mypager_preprocess_pager(&$variables) {
  global $pager_total;
  $element = $variables['pager']['#element'];
  $variables['options']['max_page_number'] = $pager_total[$element];
  // $variables['#attached']['drupalSettings']['mypager'][$element]['currents'] = $variables['current'];
}


/**
 * Implements hook_preprocess_views_view().
 */
function mypager_preprocess_views_view(&$variables) {
  /* @var \Drupal\views\ViewExecutable $view */
  $view = $variables['view'];
  if ($view->getDisplay()->isPagerEnabled() && !empty($variables['rows'])) {
    $pager = $view->getPager();
    if ($pager && $pager instanceof Mypager) {
      $variables['rows']['#theme_wrappers'] = ['container'];
      $variables['rows']['#attributes'] = [
        'data-drupal-views-mypager-content-wrapper' => TRUE,
        'class' => [
          'views-mypager-content-wrapper',
          'clearfix',
        ],
      ];
    }
  }
}
